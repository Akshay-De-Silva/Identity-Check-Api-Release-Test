// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: identity.sql

package db

import (
	"context"
)

const createPerson = `-- name: CreatePerson :one
INSERT INTO persons (
    id,
    name,
    address
) VALUES (
    $1,
    $2,
    $3)
RETURNING id, name, address
`

type CreatePersonParams struct {
	ID      string `json:"id"`
	Name    string `json:"name"`
	Address string `json:"address"`
}

func (q *Queries) CreatePerson(ctx context.Context, arg CreatePersonParams) (Person, error) {
	row := q.db.QueryRowContext(ctx, createPerson, arg.ID, arg.Name, arg.Address)
	var i Person
	err := row.Scan(&i.ID, &i.Name, &i.Address)
	return i, err
}

const getPerson = `-- name: GetPerson :one
SELECT id, name, address FROM persons
WHERE id = $1
`

func (q *Queries) GetPerson(ctx context.Context, id string) (Person, error) {
	row := q.db.QueryRowContext(ctx, getPerson, id)
	var i Person
	err := row.Scan(&i.ID, &i.Name, &i.Address)
	return i, err
}
